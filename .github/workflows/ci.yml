name: Pull request check

on: [pull_request]

jobs:
  lint:
    name: Run linters
    runs-on: ubuntu-24.04
    timeout-minutes: 20
    env:
      # renovate: datasource=github-releases depName=terraform-linters/tflint
      TFLINT_VERSION: "v0.53.0"
      # renovate: datasource=pypi depName=pre-commit
      PRE_COMMIT_VERSION: "4.0.0"
      # renovate: datasource=github-releases depName=python-poetry/poetry
      POETRY_VERSION: "1.8.3"
      # renovate: datasource=github-releases depName=python-poetry/poetry-plugin-export
      POETRY_PLUGIN_EXPORT_VERSION: "1.8.0"
    steps:
      - uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1
        with:
          show-progress: false

      - name: Install poetry
        run: |
          curl -sSL https://install.python-poetry.org | POETRY_VERSION=${{ env.POETRY_VERSION }} python3 -
          poetry self add "poetry-plugin-export==${{ env.POETRY_PLUGIN_EXPORT_VERSION }}"
          poetry config warnings.export false

      - uses: actions/setup-python@f677139bbe7f9c59b41e40162b753c062f5d49a3 # v5.2.0
        with:
          python-version-file: ".python-version"
          cache: "poetry"

      - name: Set up environment
        run: |
          poetry env use "$(cut -d. -f-2 .python-version)"
          poetry install --no-interaction

      - name: Configure tofu plugin cache
        run: |
          printf 'plugin_cache_dir = "%s/.tofu.d/plugin-cache"\n' "$HOME" > ~/.tofurc
          mkdir -p ~/.tofu.d/plugin-cache

      - name: Cache Tofu plugins
        uses: actions/cache@3624ceb22c1c5a301c8db4169662070a689d9ea8 # v4.1.1
        with:
          path: ~/.tofu.d/plugin-cache
          key: ${{ runner.os }}-tofu-${{ hashFiles('**/.terraform.lock.hcl') }}

      - name: Set tofu version
        run: echo "TOFU_VERSION=$(cat tf/.opentofu-version)" >> "$GITHUB_ENV"

      - uses: opentofu/setup-opentofu@12f4debbf681675350b6cd1f0ff8ecfbda62027b # v1.0.4
        with:
          tofu_version: ${{ env.TOFU_VERSION }}
          tofu_wrapper: false

      - uses: actions/cache@3624ceb22c1c5a301c8db4169662070a689d9ea8 # v4.1.1
        name: Cache tflint plugin dir
        with:
          path: ~/.tflint.d/plugins
          key: ${{ runner.os }}-tflint-${{ hashFiles('.tflint.hcl') }}

      - uses: terraform-linters/setup-tflint@19a52fbac37dacb22a09518e4ef6ee234f2d4987 # v4.0.0
        name: Setup TFLint
        with:
          tflint_version: ${{ env.TFLINT_VERSION }}

      - name: Init TFLint
        run: tflint --init
        env:
          # https://github.com/terraform-linters/tflint/blob/master/docs/user-guide/plugins.md#avoiding-rate-limiting
          GITHUB_TOKEN: ${{ github.token }}

      - name: Configure pre-commit repo cache
        uses: actions/cache@3624ceb22c1c5a301c8db4169662070a689d9ea8 # v4.1.1
        with:
          path: ~/.cache/pre-commit
          key: ${{ runner.os }}-pre-commit-repo-${{ env.pythonLocation }}-${{
            hashFiles('.pre-commit-config.yaml') }}

      - name: Configure pre-commit install cache
        uses: actions/cache@3624ceb22c1c5a301c8db4169662070a689d9ea8 # v4.1.1
        id: pre_commit_install_cache
        with:
          path: ~/.pre-commit-venv
          key:
            ${{ runner.os }}-pre-commit-venv-${{ env.PRE_COMMIT_VERSION }}-${{
            env.pythonLocation }}

      - name: Install pre-commit
        if: steps.pre_commit_install_cache.outputs.cache-hit != 'true'
        run: |
          python -m venv ~/.pre-commit-venv
          # shellcheck source=/dev/null
          . ~/.pre-commit-venv/bin/activate
          pip install pre-commit=='${{ env.PRE_COMMIT_VERSION }}'

      - name: Lint with pre-commit
        run: |
          # shellcheck source=/dev/null
          . ~/.pre-commit-venv/bin/activate
          pre-commit run --show-diff-on-failure --color=always --all-files
